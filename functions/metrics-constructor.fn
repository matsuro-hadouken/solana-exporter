#!/bin/bash

# Function to write metric to file
function write_metric_to_file {
    local key=$1
    local description=$2
    local type=$3
    local value=$4
    local metric_file=$5

    {
        echo "# HELP $key $description"
        echo "# TYPE $key $type"
        echo "${metrics_prefix}_${key} $value"
    } > "$metric_file"
}

# Function to validate and create a Prometheus metric file
function create_prom_file {
    local base_metric_name=$1
    local description=$2
    local type=$3
    local value=$4
    local metric_file="${temp_files}/${base_metric_name}.prom"

    if [[ "$value" =~ ^-?[0-9]*\.?[0-9]+$ ]]; then
        if [ "$log_level" = "debug" ]; then
            log_message "DEBUG: Creating Prometheus file for $base_metric_name with value: $value" "$log_file_path"
        fi
        write_metric_to_file "$base_metric_name" "$description" "$type" "$value" "$metric_file"
    else
        log_message "Invalid metric value for $base_metric_name: $value" "$log_file_path"
        return 1  # Indicate error
    fi
}

# Function to create multiple Prometheus metric files from key-value pairs
function create_multiple_prom_files {
    local metrics=("$@")
    for metric in "${metrics[@]}"; do
        local key=$(echo "$metric" | cut -d'=' -f1)
        local value=$(echo "$metric" | cut -d'=' -f2)
        local metric_file="${temp_files}/${key}.prom"
        local description="metric info"  # This could be improved with more specific descriptions
        local type="gauge"  # This could be parameterized if needed

        create_prom_file "$key" "$description" "$type" "$value"
    done
}
