#!/bin/bash

# Function to create a Prometheus metric file for node-exporter
function create_prom_file {

    local base_metric_name=$1
    local description=$2
    local type=$3
    local value=$4

    local metric_file="${temp_files}/${base_metric_name}.prom"

    # Validate the metric value for integer, float (including zero), or version number
    if ! [[ "$value" =~ ^[0-9]+(\.[0-9]+)?(\.[0-9]+)?$ ]]; then
        log_message "Invalid metric value for $base_metric_name: $value" "$log_file_path"
    else
        log_message "Creating Prometheus file for $base_metric_name with value: $value" "$log_file_path"
        {
            echo "# HELP $base_metric_name $description"
            echo "# TYPE $base_metric_name $type"
            echo "${metrics_prefix}_$base_metric_name $value"
        } > "$metric_file"
    fi
}

# Function to create multiple Prometheus metric files from key-value pairs
function create_multiple_prom_files {
    local metrics=("$@")
    for metric in "${metrics[@]}"; do
        local key=$(echo "$metric" | cut -d'=' -f1)
        local value=$(echo "$metric" | cut -d'=' -f2)
        local metric_file="${temp_files}/${key}.prom"
        if ! [[ "$value" =~ ^[0-9]+(\.[0-9]+)?(\.[0-9]+)?$ ]]; then
            log_message "Invalid metric value for $key: $value" "$log_file_path"
        else
            log_message "Creating Prometheus file for $key with value: $value" "$log_file_path"
            {
                echo "# HELP $key metric info"
                echo "# TYPE $key gauge"
                echo "${metrics_prefix}_$key $value"
            } > "$metric_file"
        fi
    done
}
